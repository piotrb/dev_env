#!/usr/bin/env ruby

def sh(cmd)
  puts "$ #{cmd}"
  system(cmd) || raise("command failed: #{$?.exitstatus}")
end

require 'optparse'

options = {}

OptionParser.new do |opts|
  opts.banner = "Usage: git-branchify [options]"

  opts.on("-f", "--feature", "Create as a Feature branch") do |v|
    options[:feature] = v
  end

  opts.on("-e", "--epic", "Create as an Epic branch") do |v|
    options[:epic] = v
  end

  opts.on("--hotfix", "Create a a hotfix branch") do |v|
    options[:hotfix] = v
  end

end.parse!

if ARGV.empty?
  name = $stdin.readline
else
  name = ARGV.join(' ')
end

name = name.downcase.gsub(/[^a-z0-9]/, ' ').gsub(/ +/, ' ').strip.gsub(' ', '-')

if options[:feature]
  name = "feature/#{name}"
end

if options[:epic]
  name = "epic/#{name}"
end

if options[:hotfix]
  name = "hotfix/#{name}"
end

sh "git checkout -b #{name.inspect}"
sh "git config branch.#{name}.remote origin"
sh "git config branch.#{name}.merge refs/heads/#{name}"
